# Docker Compose 스테이지 환경 설정
name: pocamarket-stage

services:
  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.stage.conf:/etc/nginx/nginx.conf
      # - ./certbot/www:/var/www/certbot # Certbot 웹루트 검증 경로
      # - ./certbot/conf:/etc/letsencrypt # 인증서 파일들이 저장될 볼륨
      # ★★★ mkcert 인증서 파일들을 컨테이너 내부로 연결 ★★★
      - ./localhost+1.pem:/etc/ssl/certs/localhost+1.pem
      - ./localhost+1-key.pem:/etc/ssl/private/localhost+1-key.pem
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - pocamarket-web
      - pocamarket-api
      - certbot # Nginx는 Certbot이 인증서를 발급받은 후에 시작될 수 있도록 의존성 설정 (certbot init 단계에서만 사용)
    networks:
      - pocamarket-network
    restart: unless-stopped

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot # Nginx와 동일한 볼륨 마운트
      - ./certbot/conf:/etc/letsencrypt # Nginx와 동일한 볼륨 마운트
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'" # 자동 갱신 스케줄러

  pocamarket-api:
    container_name: pocamarket-api
    build:
      context: ./pocamarket_api
      dockerfile: Dockerfile
    env_file:
      - ./pocamarket_api/.env
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xmx512m -Xms256m
    networks:
      - pocamarket-network
    restart: unless-stopped

  pocamarket-web:
    container_name: pocamarket-web
    build:
      context: ./pocamarket_web
      dockerfile: Dockerfile
    env_file:
      - ./pocamarket_web/.env
    environment:
      - NODE_ENV=production
    networks:
      - pocamarket-network
    restart: unless-stopped

networks:
  pocamarket-network:
    driver: bridge
